.TH K\-point "" "" "convergence study for a semi\-conductor and an introduction
  some of the basic concepts of the abipy library."
.SH Background
.PP
This lesson deals with the basic k\-point convergence study that is
needed in any DFT calculation of a solid.
In a DFT calculation of a solid the first Brillouin zone needs to be
discretized to enable the integration of various quantities.
Effectively the integrals are turned in to sums over k\-points.
For any result to be converged we need a k\-point mesh that is dense
enough, but at the same time as coarse as possible to make for an
efficient calculation.
Various types of materials require in general different densities of the
k\-point meshes.
In general metals need denser meshes than semiconductors, because of the
need to accurately sample the fermi surface.
Your first investigation into a new compound will quit often be a
k\-point convergence study.
.SH The related abinit variables
.PP
The abinit parameters concerned with the k\-point grid are:
.RS
.IP \[bu] 2
ngkpt
.IP \[bu] 2
shiftk
.IP \[bu] 2
occopt (see exercises)
.IP \[bu] 2
tsmear (see exercises)
.IP \[bu] 2
kptopt (see exercises)
.RE
.PP
At this place they will not be discussed in detail.
In stead you are invited to read the abinit documentation on them.
The full description, directly from the abinit description is available
via the following function:
.RS
.IP
.nf
\f[C]
abidoc.py\ man\ inputvariable
\f[]
.fi
.RE
.PP
This will print the official abinit description of this inputvariable.
.SH The course of this lesson
.PP
In the generation of this lesson by the python script all the input
files have been generated automatically.
The input files have been organized in a workdir
"flow_lesson_Si_kpoint_convergence".
Inside you\[aq]ll find a single work, w0, with four tasks, t0 \- t3.
Have a look at the input files, run.abi, in the four tasks to see what
is different.
.PP
You\[aq]ll see that also the files file and the jobs submission script
are generated.
In the job scripts you\[aq]ll see that the jobs are prepared to run just
on the front end.
.PP
You\[aq]ll also see that the files file has been created as well.
.PP
To perform the kpoint convergence study execute abinit with the four
input sets.
.PP
Once the calculations are ready, you\[aq]ll see three important output
files.
.RS
.IP \[bu] 2
run.out
.IP \[bu] 2
run.log
.IP \[bu] 2
run.err
.RE
.PP
The main summary of the calculation can be found in the .out file,
we\[aq]ll go there soon :\-).
The .err file should be empty.
If it\[aq]s not something went wrong.
If something went wrong read the .err.
file.
The .log file contains extensive information on you calculation that
could help to find out what went wrong in the case of errors.
Especially there are three types of messages that could help
.RS
.IP \[bu] 2
COMMENT
.IP \[bu] 2
WARNING
.IP \[bu] 2
ERROR
.RE
.PP
In case of an error message abinit stopped the execution by itself,
because of that error.
.PP
Now the .out file.
Some interesting keywords to look for:
.RS
.IP \[bu] 2
Symmetries
.IP \[bu] 2
Citation for XC functional:
.IP \[bu] 2
ETOT (the total energies during the electronic structure convergence)
.IP \[bu] 2
Eigenvalues
.IP \[bu] 2
Etotal (the total energy of an ionic step)
.RE
.PP
Obviously there is much more.
.PP
Collect the total energies of the four calculations and plot them as a
function of the number of k\-points in the calculation.
.PP
Alternative to execution of the manual execution the calculations can
also be executed using the abipy scheduler.
.RS
.IP
.nf
\f[C]
abirun.py\ flow_lesson_Si_kpoint_convergence\ scheduler
\f[]
.fi
.RE
