.TH Basis "" "" "set convergence study and some more on flows, works, and tasks."
.SH Background
.PP
This lesson focuses on the convergence study of the completeness of the
basis set used.
In our case the basis set consists of plane waves.
Plane waves are inherently well suited to capture the periodic nature of
a crystalline solid.
In addition a plane wave basis set has the advantage that it introduces
only one convergence parameter, the kinetic energy cutoff.
.PP
The sharp features of the wavefunctions near the nucleus are however
problematic for plane waves.
Describing these features would require very high frequency plane waves.
In practice we will always use pseudo\-potentials in stead of the actual
nuclear potential to improve convergence.
Effectively a pseudopotential replaces the sharp coulomb potential of
the nucleus and the core electrons by something more smooth inside the
pseudization region that connects smoothly to the real potential outside
the pseudization region.
.PP
Needless to say a different pseudo potential will require a different
cutoff for the calculation to be converged.
In general norm\-conserving pseudos require a larger cut\-off that
ultra\-soft pseudos and Projector Augmented Wave \[aq]pseudos\[aq]
require even smaller cutoffs.
Moreover two pseudos of the same type for the same element may require
different cutoffs as well.
\[aq]Harder\[aq] (having a smaller pseudization radius) require larger
cutoffs than \[aq]softer\[aq] pseudos.
There are however many more properties of a pseudo that determine the
cutoff needed.
.SH The related abinit variables
.PP
As said the most important parameter in the energy cutoff, in abinit
ecut.
The most important input parameters concerning the basis set are:
.RS
.IP \[bu] 2
ecut
.IP \[bu] 2
dilatms
.IP \[bu] 2
ecutsm
.IP \[bu] 2
ecutdg
.RE
.PP
More info on the inputvariables and their use can be obtained using the
following function:
.RS
.IP
.nf
\f[C]
lesson.docvar("inputvariable")
\f[]
.fi
.RE
.SH The abipy flows in this lesson
.PP
This lesson contains a factory function for a ecut convergence study.
In this lesson we will discuss a few more properties and methods of
flows.
.SH The course of this lesson
.PP
Start this lesson by importing it in a new namespace
.RS
.IP
.nf
\f[C]
from\ abipy.lessons.lesson_ecut_convergence\ import\ Lesson()
lesson\ =\ Lesson()
\f[]
.fi
.RE
.PP
As always you can reread this lesson\[aq]s text using the command:
.RS
.IP
.nf
\f[C]
lesson
\f[]
.fi
.RE
.PP
To build the flow:
.RS
.IP
.nf
\f[C]
flow\ =\ lesson.make_ecut_flow()
\f[]
.fi
.RE
.PP
To print the input files
.RS
.IP
.nf
\f[C]
flow.show_inputs()
\f[]
.fi
.RE
.PP
In this lesson we take a closer look at the structure of a Flow.
In general a flow is a container that contains \[aq]works\[aq].
Works are (connected) series of abinit executions we call tasks.
To show the works contained in a flow use the \[aq]works()\[aq] method:
.RS
.IP
.nf
\f[C]
flow.works()
\f[]
.fi
.RE
.PP
to show the status of a flow:
.RS
.IP
.nf
\f[C]
flow.show_status()
\f[]
.fi
.RE
.PP
There are many more properties and methods of a flow than may also come
in handy.
By typing [tab] in ipython after the period, you will be presented with
all the option.
Feel free to experiment a bit at this point.
By adding a questionmark to the method or property ipython will show the
information and description of it:
.RS
.IP
.nf
\f[C]
flow.open_files?
\f[]
.fi
.RE
.PP
Will explain what this method is supposed to do.
.PP
Start the flow with the scheduler and wait for completion.
.RS
.IP
.nf
\f[C]
flow.make_scheduler().start()
\f[]
.fi
.RE
.PP
To analyze the results.
.RS
.IP
.nf
\f[C]
flow.analyze()
\f[]
.fi
.RE
.SH Exercises
.PP
As for the kpoint convergence study, try to run the convergence study
for Al.
.PP
Get a copy of the python script we use in this lesson like before.
In the lesson class definition you\[aq]ll find the analyze method.
Execute the parts to get the dataframe.
Use the commands you learned in this lesson to find out what else is
contained in the dataframe.
Make some more convergence plots.
.PP
If you like to dig in more look up the pandas package on internet.
The dataframe the robot returns is a pandas dataframe all the thing that
have been programmed in that package are at your disposal.
.SH Next
.PP
A logical next lesson would be lesson_relaxation
