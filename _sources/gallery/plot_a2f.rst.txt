

.. _sphx_glr_gallery_plot_a2f.py:


Eliashberg function
===================

This example shows how to plot the Eliashberg function a2F(w) 
and the e-ph coupling strenght in metals.




.. image:: /gallery/images/sphx_glr_plot_a2f_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    ================================= File Info =================================
    Name: al_888k_161616q_EPH.nc
    Directory: /Users/gmatteo/git_repos/abipy/abipy/data/refs/al_eph
    Size: 129.04 kb
    Access Time: Tue Nov  7 23:55:57 2017
    Modification Time: Sun Oct 29 03:24:10 2017
    Change Time: Sun Oct 29 03:24:10 2017

    ================================= Structure =================================
    Full Formula (Al1)
    Reduced Formula: Al
    abc   :   2.806386   2.806386   2.806386
    angles:  60.000000  60.000000  60.000000
    Sites (1)
      #  SP      a    b    c
    ---  ----  ---  ---  ---
      0  Al      0    0    0

    Abinit Spacegroup: spgid: 0, num_spatial_symmetries: 48, has_timerev: True, symmorphic: False

    ============================== Electronic Bands ==============================
    Number of electrons: 3.0, Fermi level: 7.129 [eV]
    nsppol: 1, nkpt: 72, mband: 5, nspinor: 1, nspden: 1
    smearing scheme: gaussian, tsmear_eV: 1.088, occopt: 7

    ================================ Phonon Bands ================================
    Number of q-points: 198
    Atomic mass units: {13.0: 26.981539000000001}
    Has non-analytical contribution for q --> 0: False

    ============================== E-PH calculation ==============================
    A2f coarse:
    Mesh from 0.0010 to 0.0488 [eV] with 479 points
    lambda_iso: 0.217, omega_log 3.30945357916e-05
    For mustar 0.8: McMillan Tc: 2.00060928927 [K]
    For mustar 0.6: McMillan Tc: 4.90536667594 [K]

    A2f interpolated:
    Mesh from 0.0010 to 0.0488 [eV] with 479 points
    lambda_iso: 0.239, omega_log 3.21858550178e-05
    For mustar 0.8: McMillan Tc: 2.07581764005 [K]
    For mustar 0.6: McMillan Tc: 5.47222245623 [K]




|


.. code-block:: python

    from abipy import abilab
    import abipy.data as abidata

    phdos_path = abidata.ref_file("al_161616q_PHDOS.nc")

    with abilab.abiopen(abidata.ref_file("al_888k_161616q_EPH.nc")) as eph:
        print(eph)
        #eph.phbands.plot()

        #eph.a2f_qintp.plot()
        #with_lambda = False
        #fig = eph.a2f_qcoarse.plot_nuterms(with_lambda=with_lambda, show=False)
        #eph.a2f_qintp.plot_nuterms(axmat=fig.axes, with_lambda=with_lambda)

        #eph.plot()
        #eph.plot_eph_strength(what="lambda")
        eph.plot_with_a2f(phdos=phdos_path)

        # Grid with 3 plots (a2F, F, a2F) with F taken from PHDOS file.
        #eph.a2f_qintp.plot_a2(phdos_path)
**Total running time of the script:** ( 0 minutes  3.904 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_a2f.py <plot_a2f.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_a2f.ipynb <plot_a2f.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
