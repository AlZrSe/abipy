

.. _sphx_glr_gallery_plot_ederivatives.py:


Effective masses
================

This example shows how to compute and plot the derivatives of the
KS eigenvalues along a high symmetry path in K-space.





.. rst-class:: sphx-glr-script-out

 Out::

    K-path contains 2 lines. Number of k-points in each line: [7, 8]
 
      Idx  Frac_coords                Name            ds  Vert
    -----  -------------------------  --------  --------  ------
        0  0.50000, 0.00000, 0.00000  L         0.165834  *
        1  0.41667, 0.00000, 0.00000            0.165834
        2  0.33333, 0.00000, 0.00000            0.165834
        3  0.25000, 0.00000, 0.00000            0.165834
        4  0.16667, 0.00000, 0.00000            0.165834
        5  0.08333, 0.00000, 0.00000            0.165834
        6  0.00000, 0.00000, 0.00000  $\Gamma$  0.164133  *
        7  0.00000, 0.07143, 0.07143            0.164133
        8  0.00000, 0.14286, 0.14286            0.164133
        9  0.00000, 0.21429, 0.21429            0.164133
       10  0.00000, 0.28571, 0.28571            0.164133
       11  0.00000, 0.35714, 0.35714            0.164133
       12  0.00000, 0.42857, 0.42857            0.164133
       13  0.00000, 0.50000, 0.50000  X
    xys
     [ array([-0.11166472, -3.68520109, -3.82120014, -3.0622375 , -2.09362151,
           -1.12518928, -0.08442449])
     array([ 0.13681818,  0.98089624,  2.10938894,  3.15229294,  4.14661303,
            5.09210206,  5.89794644,  6.6777455 ])]




|


.. code-block:: python

    from abipy.abilab import abiopen
    import abipy.data as abidata

    gsr_file = abiopen(abidata.ref_file("si_nscf_GSR.nc"))

    kpath = gsr_file.kpoints

    #print("ds", kpath.ds)
    #for vers in kpath.versors:
    #    print("versors", vers)
    print(kpath)
    #print(kpath.lines)

    #branch = bands.get_branch(spin=0, band=3)
    #ders = kpath.finite_diff(branch, order=1)
    #ders = kpath.finite_diff(branch, order=2)
    #print("order2",ders)

    ebands = gsr_file.ebands

    xys = ebands.derivatives(spin=0, band=0, order=1)
    print("xys\n", xys)
    #xys = ebands.derivatives(spin=0, band=1, order=1)
    #xys = ebands.derivatives(spin=0, band=2, order=1)
    #xys = ebands.derivatives(spin=0, band=3, order=1)

    #ebands.plot()

    #emasses = ebands.effective_masses(spin=0, band=0, acc=2)
    #print("emasses", emasses)

    #emasses = ebands.effmass(spin=0, kpoint=[0,0,0], bands=0, acc=2)
    #print("emasses", emasses)

    #emasses = ebands.effective_masses(spin=0, band=3, acc=2)
    #print("emasses", emasses)

    #emasses = ebands.effective_masses(spin=0, band=4, acc=2)
    #print("emasses", emasses)

    gsr_file.close()

**Total running time of the script:** ( 0 minutes  0.742 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ederivatives.py <plot_ederivatives.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ederivatives.ipynb <plot_ederivatives.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
