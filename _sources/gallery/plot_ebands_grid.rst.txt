

.. _sphx_glr_gallery_plot_ebands_grid.py:


ElectronBandsPlotter
====================

This example shows how to plot several band structures on a grid

We use two GSR files:

    si_scf_GSR.n: energies on a homogeneous sampling of the BZ (can be used to compute DOS)
    si_nscf_GSR.nc: energies on a k-path in the BZ (used to plot the band dispersion)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /gallery/images/sphx_glr_plot_ebands_grid_001.png
            :scale: 47

    *

      .. image:: /gallery/images/sphx_glr_plot_ebands_grid_002.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    nsppol  nkpt  nband  nelect    fermie formula  natom  angle0  \
    BZ sampling       1    29      8     8.0  5.598453     Si2      2    60.0   
    k-path            1    14      8     8.0  5.598453     Si2      2    60.0   

                 angle1  angle2      ...          volume  abispg_num  spglib_symb  \
    BZ sampling    60.0    60.0      ...       40.888292         227        Fd-3m   
    k-path         60.0    60.0      ...       40.888292         227        Fd-3m   

                 spglib_num scheme occopt  tsmear_ev bandwidth_spin0  \
    BZ sampling         227   none      1   0.272114       11.855874   
    k-path              227   none      1   0.272114       11.855854   

                 fundgap_spin0  dirgap_spin0  
    BZ sampling       0.562277      2.531798  
    k-path            0.524340      2.531828  

    [2 rows x 23 columns]




|


.. code-block:: python

    from abipy.abilab import ElectronBandsPlotter
    from abipy.data import ref_file

    # To plot a grid with two band structures:
    plotter = ElectronBandsPlotter()
    plotter.add_ebands("BZ sampling", ref_file("si_scf_GSR.nc"))
    plotter.add_ebands("k-path", ref_file("si_nscf_GSR.nc"))

    # Get pandas dataframe
    frame = plotter.get_ebands_frame()
    print(frame)

    plotter.gridplot()
    #plotter.animate()

    # To plot a grid with band structures + DOS, use the optional argument `edos_objects`
    # The first subplot gets the band dispersion from eb_objects[0] and the DOS from edos_objects[0]
    # edos_kwargs is an optional dictionary passed to `get_dos` to compute the DOS.
    eb_objects = 2 * [ref_file("si_nscf_GSR.nc")]
    edos_objects = 2 * [ref_file("si_scf_GSR.nc")]

    # sphinx_gallery_thumbnail_number = 2
    plotter = ElectronBandsPlotter()
    plotter.add_ebands("Si", ref_file("si_nscf_GSR.nc"), dos=ref_file("si_scf_GSR.nc"))
    plotter.add_ebands("Same data", ref_file("si_nscf_GSR.nc"), dos=ref_file("si_scf_GSR.nc"))
    plotter.gridplot()

**Total running time of the script:** ( 0 minutes  4.839 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ebands_grid.py <plot_ebands_grid.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ebands_grid.ipynb <plot_ebands_grid.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
